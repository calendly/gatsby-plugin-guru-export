import Joi from '@hapi/joi';

const itemSchema = Joi.object({
  output: Joi.string(),
  query: Joi.string(),
  serialize: Joi.func().required(),
  guruFieldMapping: Joi.object(),
}).required();

const optionsSchema = Joi.object().keys({
  feeds: Joi.array().items(itemSchema).required(),
  query: Joi.string(),
});

export const runQuery = (handler, query) =>
  handler(query).then((r) => {
    if (r.errors) {
      throw new Error(r.errors.join(`, `));
    }

    return r.data;
  });

export const defaultOptions = {
  // Run a default query to gather some information about the site.
  query: `
      {
        site {
          siteMetadata {
            title
            description
            siteUrl
            site_url: siteUrl
          }
        }
      }
    `,

  feeds: [
    {
      query: `
        {
          allMarkdownRemark(
            limit: 1000,
            sort: {
              order: DESC,
              fields: [frontmatter___date]
            }
          ) {
            edges {
              node {
                frontmatter {
                  title
                  date
                }
                fields {
                  slug
                }
                excerpt
                html
              }
            }
          }
        }
      `,

      // Map content field to guru specific fields
      guruFieldMapping: {
        title: "title",
        tags: null,
        externalId: "id",
        externalUrl: ({ query: { site, allMarkdownRemark } }) => `${site.siteUrl}/${allMarkdownRemark.fields.slug}`,
      },
      // Where we will save the feed generated by this query.
      output: `/guru`,
    },
  ],
};

export function validateOptions({ reporter }, options = {}) {
  delete options.plugins;

  const result = optionsSchema.validate(options, {
      abortEarly: false,
      allowUnknown: false,
  });

  if (result.error) {
      const errors = [];

      result.error.details.forEach(detail => {
          errors.push(detail.message);
      });

      reporter.panic(`Error with gatsby-plugin-guru-export plugin options:\n${errors.join('\n')}`);
  }
}
